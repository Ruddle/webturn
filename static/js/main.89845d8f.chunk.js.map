{"version":3,"sources":["webpack:///./src/StateCompute.js?0f56","webpack:///./src/StateCompute.js?4de9","h.js","StateCompute.js","Draw.js","App.js","reportWebVitals.js","index.js"],"names":["inst","wrap","Worker","module","exports","f","this","getOrEval","e","swi","i","arguments","length","condition","arm","Array","isArray","flatstep","a","b","x","Math","max","min","clamp","smoothstep","t","DEFAULT_HP","require","POWER","arrow","name","damage","cooldown","cost","maxDist","fire","diffPos","d","y","l","sqrt","enumeratePossibleActions","state","allActions","currentChar","forEach","dx","dy","newPos","push","type","chars","enemy","team","target","id","actions","action","evaluateAction","possible","effects","EFFECT_TYPES","END_TURN","REGEN_PA","LOSE_PA","LOSE_HP","MOVE","EMPTY_POWER","ANIM_MOVE","ANIM_ATTACK","ANIM_ARROW","p","map","currentCharId","tile","isWalkable","tiles","w","pa","filter","charId","from","to","find","hp","hpLost","power","applyEffects","animation","newEffects","effect","char","Object","keys","k","lastPlayedTurn","nextChars","includes","anim","startTime","performance","now","computedAt","nexts","Number","MAX_SAFE_INTEGER","alives","slice","_","TILE_WIDTH","Power","styled","div","Draw","user","do_action","useState","charHover","setCharHover","tileHover","setTileHover_","setTileHover","useMemo","throttle","actionsEffects","all","isAction","concat","sort","splice","nextPlayersMemo","canAction","pass","useCallback","selectedPower","setSelectedPower","predictedAction","setPredictedAction","actionsRef","useRef","useEffect","current","scrollTop","scrollHeight","possibleActions","ticker","setTicker","timer","handle","tickAfter","setTimeout","old","eva","tileClick","charClick","mapRef","style","width","display","flexDirection","justifyContent","alignItems","padding","boxSizing","index","onMouseEnter","onMouseLeave","background","margin","color","userSelect","border","borderRadius","src","avatar","position","cursor","chunk","row","rowIndex","colIndex","height","transition","onClick","ref","onMouseMove","bb","getBoundingClientRect","floor","clientX","clientY","top","left","DisplayChar","opacity","fontSize","marginRight","minWidth","overflowY","ActionEffectFrag","flex","JSON","stringify","HoriChar","fontWeight","CharEffect","simpleE","cloneDeep","charRef","setPosition","callback","stanRef","React","previousTimeRef","animate","time","undefined","deltaTime","requestAnimationFrame","cancelAnimationFrame","useAnimationFrame","elapsed","lambda","dd","boxShadow","worker","MyWorker","MAP","h","replace","split","parseInt","alreadyReducing","reducer","console","log","generateBestIAAction","App","stateRef","randId","random","ids","s","lastEffectTime","defaultState","dispatch","error","setState","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89845d8f.chunk.js","sourcesContent":["var wrap = require('comlink').wrap,Worker = require(\"!worker-loader?{}!/home/ctrl/prog/webturn/front/node_modules/comlink-loader/dist/comlink-worker-loader.js!/home/ctrl/prog/webturn/front/node_modules/react-scripts/node_modules/babel-loader/lib/index.js??ref--5-oneOf-2!/home/ctrl/prog/webturn/front/src/StateCompute.js\"),inst;module.exports = function f() {if (this instanceof f) return wrap(Worker());return inst || (inst = wrap(Worker()));};","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"53a8fe5b63ac86ae25b4.worker.js\");\n};","import React from \"react\";\n\nfunction getOrEval(e) {\n  return typeof e === \"function\" ? e() : e;\n}\nexport function swi() {\n  for (let i = 0; i < arguments.length - 1; i++) {\n    let [condition, arm] = arguments[i];\n    if (getOrEval(condition)) {\n      return getOrEval(arm);\n    }\n  }\n\n  let i = arguments.length - 1;\n  if (!Array.isArray(arguments[i])) return getOrEval(arguments[i]);\n  let [condition, arm] = arguments[i];\n  if (getOrEval(condition)) {\n    return getOrEval(arm);\n  }\n}\n\nexport const useAnimationFrame = (callback) => {\n  // Use useRef for mutable variables that we want to persist\n  // without triggering a re-render on their change\n  const stanRef = React.useRef();\n  const previousTimeRef = React.useRef();\n\n  const animate = (time) => {\n    if (previousTimeRef.current !== undefined) {\n      const deltaTime = time - previousTimeRef.current;\n      callback(deltaTime);\n    }\n    previousTimeRef.current = time;\n    stanRef.current = requestAnimationFrame(animate);\n  };\n\n  React.useEffect(\n    () => {\n      stanRef.current = requestAnimationFrame(animate);\n      return () => cancelAnimationFrame(stanRef.current);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n};\n\nexport let clamp = (x, a, b) => Math.max(a, Math.min(b, x));\nexport let flatstep = (a, b, x) => clamp((x - a) / (b - a), 0, 1);\nexport let ease = (t) => (t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t);\nexport let smoothstep = (a, b, x) => ease(flatstep(a, b, x));\nexport let mix = (a, b, m) => a * (1.0 - m) + b * m;\n\nfunction asleep(delay) {\n  return new Promise((r) => setTimeout(r, delay));\n}\n","var _ = require(\"lodash\");\n\nexport const DEFAULT_HP = 10;\nexport const MAX_HP = 15;\nexport const DEFAULT_PA = 10;\nexport const MAX_PA = 15;\nexport const PA_REGEN = 10;\n\nconst POWER = {\n  arrow: {\n    name: \"arrow\",\n    damage: 1,\n    cooldown: 2,\n    cost: 4,\n    maxDist: 15,\n  },\n  fire: {\n    name: \"fire\",\n    damage: 2,\n    cooldown: 4,\n    cost: 5,\n    maxDist: 15,\n  },\n};\n\n/**\n *\n * @param {Object} a\n * @param {number} a.x\n * @param {number} a.y\n * @param {Object} b\n * @param {number} b.x\n * @param {number} b.y\n * @returns {{x:number, y:number}}\n */\nexport function addPos(a, b) {\n  return { x: b.x + a.x, y: b.y + a.y };\n}\n/**\n *\n * @param {Object} a\n * @param {number} a.x\n * @param {number} a.y\n * @param {Object} b\n * @param {number} b.x\n * @param {number} b.y\n * @returns {{x:number, y:number, l:number}}\n */\nexport function diffPos(a, b) {\n  let d = { x: b.x - a.x, y: b.y - a.y };\n  d.l = Math.sqrt(d.x * d.x + d.y * d.y);\n  return d;\n}\n\n/**\n * @param {Object} p\n * @param {number} p.x\n * @param {number} p.y\n */\nexport function indexFromPos(p, map) {\n  return p.x + p.y * map.w;\n}\n/**\n * @param {Object} p\n * @param {number} p.x\n * @param {number} p.y\n */\nexport function tileFromPos(p, map) {\n  return map.tiles[p.x + p.y * map.w];\n}\n\nexport function rateState(state, fromIdPov) {\n  let score = 0;\n  let current = state.chars.find((e) => e.id === fromIdPov);\n  let myTeam = current.team;\n\n  let closestEnnemy = null;\n  state.chars.forEach((other) => {\n    let ally = other.team === myTeam;\n    let factor = ally ? 1 : -1;\n    score += (other.pa * 0.0 + Math.pow(other.hp, 0.5)) * factor;\n\n    if (!ally && other.hp > 0) {\n      let d = diffPos(other, current);\n      if (!closestEnnemy || d.l < closestEnnemy.l) {\n        closestEnnemy = { l: d.l, ...other };\n      }\n    }\n  });\n\n  if (closestEnnemy) {\n    score -= closestEnnemy.l * 0.01;\n  }\n\n  return score;\n}\n\nexport function enumeratePossibleActions(state) {\n  let allActions = [];\n  const currentChar = state.currentChar;\n  //Move\n  [\n    [-1, -1],\n    [-1, 0],\n    [-1, 1],\n    [0, -1],\n    [0, 1],\n    [1, -1],\n    [1, 0],\n    [1, 1],\n  ].forEach(([dx, dy]) => {\n    let newPos = addPos(currentChar, { x: dx, y: dy });\n    allActions.push({ type: \"move\", ...newPos });\n  });\n  //Attack\n  state.chars.forEach((enemy) => {\n    if (enemy.team !== currentChar.team) {\n      allActions.push({ type: \"attack\", target: enemy.id });\n    }\n  });\n  //Arrow\n  state.chars.forEach((enemy) => {\n    if (enemy.team !== currentChar.team) {\n      allActions.push({ type: \"arrow\", target: enemy.id });\n    }\n  });\n  //Pass\n  {\n    allActions.push({ type: \"pass\" });\n  }\n\n  let actions = [];\n  allActions.forEach((action) => {\n    let { cost, possible, effects } = evaluateAction(state, action);\n    if (possible) {\n      actions.push({ ...action, cost, effects });\n    }\n  });\n\n  return actions;\n}\n\nexport function bestAction(old, actions_) {\n  let actions = actions_.map((action) => {\n    let newSubState = minimalStateCopy(old);\n\n    applyEffects(newSubState, action.effects);\n    // let score = rateState(newSubState, old.currentChar.id);\n\n    let score = exploreAndRate(newSubState, old.currentChar.id, 4);\n\n    return { ...action, score };\n  });\n\n  //Take one of the best outcome\n  actions.sort((a, b) => b.score - a.score);\n  actions = _.takeWhile(actions, (e) => e.score === actions[0].score);\n\n  return _.sample(actions);\n}\n\nexport function generateBestIAAction(state) {\n  let start = performance.now();\n  let actions = enumeratePossibleActions(state);\n  let action = bestAction(state, actions);\n  console.log(\"IA PLAY took:\", performance.now() - start, \"ms\");\n  return action;\n}\n\nexport const EFFECT_TYPES = {\n  END_TURN: \"END_TURN\",\n  REGEN_PA: \"REGEN_PA\",\n  LOSE_PA: \"LOSE_PA\",\n  LOSE_HP: \"LOSE_HP\",\n  MOVE: \"MOVE\",\n\n  EMPTY_POWER: \"EMPTY_POWER\",\n\n  //ANIMATION EFFECT\n  ANIM_MOVE: \"ANIM_MOVE\",\n  ANIM_ATTACK: \"ANIM_ATTACK\",\n  ANIM_ARROW: \"ANIM_ARROW\",\n};\n\n/**\n *\n * @param {*} state\n * @param {*} action\n * @returns {{cost:number, possible:boolean, effect : *}}\n */\nexport function evaluateAction(state, action) {\n  const currentChar = state.currentChar;\n  const currentCharId = state.currentChar.id;\n  let cost = 0;\n  let possible = false;\n\n  let effects = [];\n\n  if (action.type === \"move\") {\n    let tile = tileFromPos(action, state.map);\n    if (isWalkable(tile)) {\n      let d = diffPos(currentChar, action);\n      let canReach = d.l > 0 && d.l < 1.5;\n      if (canReach) {\n        cost = d.l === 1 ? 2 : 3;\n        let hasEnoughMana = cost <= currentChar.pa;\n        if (hasEnoughMana) {\n          let noOtherChar =\n            state.chars.filter((e) => e.x === action.x && e.y === action.y)\n              .length === 0;\n          possible = noOtherChar;\n          if (possible) {\n            effects.push({\n              type: EFFECT_TYPES.LOSE_PA,\n              charId: currentCharId,\n              cost,\n            });\n            effects.push({\n              type: EFFECT_TYPES.ANIM_MOVE,\n              charId: currentCharId,\n              from: { x: currentChar.x, y: currentChar.y },\n              to: { x: action.x, y: action.y },\n            });\n            effects.push({\n              type: EFFECT_TYPES.MOVE,\n              charId: currentCharId,\n              x: action.x,\n              y: action.y,\n            });\n          }\n        }\n      }\n    }\n  } else if (action.type === \"attack\") {\n    cost = 3;\n    let target = state.chars.find((e) => e.id === action.target);\n\n    if (target.hp > 0) {\n      let d = diffPos(currentChar, target);\n      let canReach = d.l > 0 && d.l < 1.5;\n      if (canReach) {\n        let hasEnoughMana = cost <= currentChar.pa;\n        if (hasEnoughMana) {\n          possible = true;\n          effects.push({\n            type: EFFECT_TYPES.ANIM_ATTACK,\n            charId: currentCharId,\n            d: d,\n          });\n          effects.push({\n            type: EFFECT_TYPES.LOSE_PA,\n            charId: currentCharId,\n            cost,\n          });\n\n          effects.push({\n            type: EFFECT_TYPES.LOSE_HP,\n            charId: action.target,\n            hpLost: 1,\n          });\n        }\n      }\n    }\n  } else if (action.type === \"arrow\") {\n    let power = POWER[action.type];\n    cost = power.cost;\n    let target = state.chars.find((e) => e.id === action.target);\n\n    if (!currentChar.cooldown[\"arrow\"] && target.hp > 0) {\n      let d = diffPos(currentChar, target);\n      let canReach = d.l > 0 && d.l <= power.maxDist;\n      if (canReach) {\n        let hasEnoughMana = cost <= currentChar.pa;\n        if (hasEnoughMana) {\n          possible = true;\n          effects.push({\n            type: EFFECT_TYPES.EMPTY_POWER,\n            charId: currentCharId,\n            power: power.name,\n          });\n          effects.push({\n            type: EFFECT_TYPES.ANIM_ARROW,\n            charId: currentCharId,\n            from: { x: currentChar.x, y: currentChar.y },\n            to: { x: target.x, y: target.y },\n            d: d,\n          });\n          effects.push({\n            type: EFFECT_TYPES.LOSE_PA,\n            charId: currentCharId,\n            cost,\n          });\n\n          effects.push({\n            type: EFFECT_TYPES.LOSE_HP,\n            charId: action.target,\n            hpLost: 1,\n          });\n        }\n      }\n    }\n  } else if (action.type === \"pass\") {\n    cost = 0;\n    possible = true;\n    effects.push({ type: EFFECT_TYPES.END_TURN, charId: currentCharId });\n  }\n\n  return { cost, possible, effects };\n}\n\nexport function applyEffects(state, effects, animation = false) {\n  if (effects.length === 0) return;\n\n  let newEffects = [];\n  effects.forEach((effect) => {\n    if (effect.type === EFFECT_TYPES.LOSE_HP) {\n      state.chars.find((e) => e.id === effect.charId).hp -= effect.hpLost;\n    } else if (effect.type === EFFECT_TYPES.LOSE_PA) {\n      state.chars.find((e) => e.id === effect.charId).pa -= effect.cost;\n    } else if (effect.type === EFFECT_TYPES.EMPTY_POWER) {\n      state.chars.find((e) => e.id === effect.charId).cooldown[effect.power] =\n        POWER[effect.power].cooldown;\n    } else if (effect.type === EFFECT_TYPES.MOVE) {\n      let char = state.chars.find((e) => e.id === effect.charId);\n      char.x = effect.x;\n      char.y = effect.y;\n    } else if (effect.type === EFFECT_TYPES.REGEN_PA) {\n      let char = state.chars.find((e) => e.id === effect.charId);\n      char.pa = Math.min(char.pa + PA_REGEN, MAX_PA);\n    } else if (effect.type === EFFECT_TYPES.END_TURN) {\n      let char = state.chars.find((e) => e.id === effect.charId);\n      Object.keys(char.cooldown).forEach((k) => {\n        let v = char.cooldown[k];\n        if (v === 1) {\n          delete char.cooldown[k];\n        } else {\n          char.cooldown[k] -= 1;\n        }\n      });\n      char.lastPlayedTurn += 1;\n\n      state.nextChars = nextChars(state);\n      state.currentChar = state.nextChars[0];\n\n      newEffects.push({ type: EFFECT_TYPES.REGEN_PA, charId: effect.charId });\n    }\n\n    if (animation === true) {\n      if (\n        [\n          EFFECT_TYPES.ANIM_ATTACK,\n          EFFECT_TYPES.ANIM_MOVE,\n          EFFECT_TYPES.ANIM_ARROW,\n        ].includes(effect.type)\n      ) {\n        state.chars.find((e) => e.id === effect.charId).anim = {\n          ...effect,\n          startTime: performance.now(),\n        };\n      }\n    }\n\n    state.effects.push({ computedAt: performance.now(), ...effect });\n  });\n\n  applyEffects(state, newEffects);\n}\n\nexport function minimalStateCopy(state) {\n  return _.cloneDeep({\n    chars: state.chars,\n    map: state.map,\n\n    currentChar: state.currentChar,\n    nextChars: state.nextChars,\n    actions: [],\n    effects: [],\n  });\n}\n\nexport function exploreAndRate(state, charIdPov, depth) {\n  if (depth === 0 || state.currentChar.id !== charIdPov) {\n    return rateState(state, charIdPov);\n  }\n\n  // let prefix = \"\";\n  // if (depth === 3) prefix = \" \";\n  // if (depth === 2) prefix = \"  \";\n  // if (depth === 1) prefix = \"   \";\n  // console.log(prefix, \"explore\", depth, \"current\", state.currentChar.name);\n  let maxScore = -9999;\n\n  let actions = enumeratePossibleActions(state);\n  actions.forEach((action) => {\n    let newSubState = minimalStateCopy(state);\n    applyEffects(newSubState, action.effects);\n    let score = exploreAndRate(newSubState, charIdPov, depth - 1);\n    maxScore = Math.max(score, maxScore);\n  });\n\n  return maxScore;\n}\n\nexport function isWalkable(tile) {\n  return tile === 0;\n}\n\nexport let nextChars = (state) => {\n  let nexts = [];\n  let lastPlayedTurn = Number.MAX_SAFE_INTEGER;\n\n  let alives = state.chars.filter((e) => e.hp >= 1);\n\n  alives.forEach((char) => {\n    lastPlayedTurn = Math.min(lastPlayedTurn, char.lastPlayedTurn);\n  });\n\n  alives\n    .filter((char) => char.lastPlayedTurn === lastPlayedTurn)\n    .forEach((char) => {\n      nexts.push(char);\n    });\n\n  while (nexts.length < 10) {\n    alives.forEach((char) => {\n      nexts.push(char);\n    });\n  }\n  return nexts.slice(0, 10);\n};\n\nlet test = 0;\n","import { smoothstep, swi, useAnimationFrame } from \"./h\";\n\nimport styled, { keyframes } from \"styled-components\";\n\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport {\n  DEFAULT_HP,\n  EFFECT_TYPES,\n  enumeratePossibleActions,\n  evaluateAction,\n  nextChars,\n  MAX_PA,\n} from \"./StateCompute\";\nvar _ = require(\"lodash\");\n\nconst TILE_WIDTH = 50;\n\nconst Power = styled.div`\n  width: 50px;\n  height: 50px;\n  transition: 200ms;\n  cursor: pointer;\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nexport default function Draw({ state, user, do_action }) {\n  let [charHover, setCharHover] = useState(null);\n  let [tileHover, setTileHover_] = useState(null);\n\n  let setTileHover = useMemo(() => _.throttle(setTileHover_, 30), []);\n\n  let actionsEffects = useMemo(() => {\n    let all = state.actions\n      .map((e) => {\n        return { isAction: true, ...e };\n      })\n      .concat(state.effects);\n    all.sort((a, b) => a.computedAt - b.computedAt);\n\n    all.splice(0, all.length - 100);\n    return all;\n  }, [state]);\n  let nextPlayersMemo = state.nextChars;\n  let currentChar = state.currentChar;\n  let canAction = currentChar.user === user;\n\n  const pass = useCallback(() => {\n    if (canAction) {\n      do_action({ type: \"pass\", charId: nextPlayersMemo[0].id, user });\n    }\n  }, [state, user, do_action]);\n\n  const [selectedPower, setSelectedPower] = useState(null);\n  const [predictedAction, setPredictedAction] = useState({\n    possible: false,\n    cost: 0,\n    type: \"none\",\n  });\n\n  const actionsRef = useRef();\n\n  useEffect(() => {\n    let e = actionsRef.current;\n    e.scrollTop = e.scrollHeight;\n  }, [state]);\n\n  useEffect(() => {\n    setSelectedPower(null);\n  }, [state]);\n\n  let possibleActions = useMemo(() => {\n    return enumeratePossibleActions(state).map((e) => {\n      delete e.effects;\n      return e;\n    });\n  }, [state]);\n\n  useEffect(() => {\n    if (canAction && possibleActions.length === 1) {\n      pass();\n    }\n  }, [canAction, possibleActions, pass]);\n\n  let [ticker, setTicker] = useState(0);\n  let timer = useRef({ handle: null, tickAfter: false });\n  useEffect(() => {\n    if (!timer.current.handle) {\n      timer.current.handle = setTimeout(() => {\n        timer.current.handle = null;\n        if (timer.current.tickAfter) {\n          setTicker((old) => old + 1);\n          timer.current.tickAfter = false;\n        }\n      }, 100);\n    } else {\n      timer.current.tickAfter = true;\n      return;\n    }\n    let type = \"none\";\n    let cost = 0;\n    let possible = false;\n    let eva = null;\n    //Simple move\n    if (selectedPower === null && tileHover !== null && charHover === null) {\n      type = \"move\";\n      eva = evaluateAction(state, {\n        type,\n        x: tileHover.x,\n        y: tileHover.y,\n      });\n    } else if (\n      (selectedPower === \"attack\" || selectedPower === null) &&\n      charHover !== null &&\n      charHover !== state.currentChar.id\n    ) {\n      type = \"attack\";\n      eva = evaluateAction(state, {\n        type,\n        target: charHover,\n      });\n    } else if (\n      selectedPower === \"arrow\" &&\n      charHover !== null &&\n      charHover !== state.currentChar.id\n    ) {\n      type = \"arrow\";\n      eva = evaluateAction(state, {\n        type,\n        target: charHover,\n      });\n    }\n    if (eva) {\n      cost = eva.cost;\n      possible = eva.possible;\n    }\n    setPredictedAction({ type, possible, cost });\n  }, [state, selectedPower, charHover, tileHover, ticker]);\n\n  const tileClick = useCallback(\n    (x, y) => {\n      if (canAction && predictedAction.possible === true) {\n        do_action({ type: \"move\", x, y, charId: currentChar.id, user });\n      }\n    },\n    [state, user, do_action, currentChar, predictedAction]\n  );\n\n  const charClick = useCallback(\n    (charId) => {\n      if (canAction && predictedAction.possible === true) {\n        do_action({\n          type: predictedAction.type,\n          target: charId,\n          charId: currentChar.id,\n        });\n      }\n    },\n    [state, user, do_action, currentChar, predictedAction]\n  );\n\n  let mapRef = useRef();\n\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <div>webturn v:0.0.6</div>\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          padding: \"10px\",\n          boxSizing: \"border-box\",\n        }}\n      >\n        {nextPlayersMemo.map((char, index) => (\n          <div\n            key={char.id + index}\n            onMouseEnter={() => setCharHover(char.id)}\n            onMouseLeave={() => setCharHover(null)}\n            style={{\n              background: charHover === char.id ? \"#ccc\" : \"#fff\",\n              padding: \"5px\",\n              margin: \"5px\",\n              color: \"black\",\n              userSelect: \"none\",\n              border: index === 0 ? \"4px solid #aef\" : \"2px solid #0000\",\n              borderRadius: \"5px\",\n            }}\n          >\n            <div>\n              <img style={{ width: \"30px\" }} src={char.avatar}></img>\n            </div>\n            {char.name}\n          </div>\n        ))}\n      </div>\n      <div\n        style={{\n          position: \"relative\",\n          cursor: swi(\n            [!canAction, \"not-allowed\"],\n            [predictedAction.type === \"attack\", \"crosshair\"],\n            [predictedAction.possible === true, \"pointer\"],\n            \"not-allowed\"\n          ),\n        }}\n      >\n        {_.chunk(state.map.tiles, state.map.w).map((row, rowIndex) => (\n          <div key={rowIndex} style={{ display: \"flex\" }}>\n            {row.map((e, colIndex) => (\n              <div\n                key={colIndex}\n                style={{\n                  width: \"50px\",\n                  height: \"50px\",\n                  transition: \"50ms\",\n                  background: swi(\n                    [e === 1, \"#333\"],\n                    [\n                      e === 0 &&\n                        tileHover?.index === colIndex + state.map.w * rowIndex,\n                      \"#bbb\",\n                    ],\n                    \"#999\"\n                  ),\n                }}\n              ></div>\n            ))}\n          </div>\n        ))}\n        <div\n          onClick={() => tileClick(tileHover.x, tileHover.y)}\n          ref={mapRef}\n          onMouseMove={(e) => {\n            let bb = mapRef.current.getBoundingClientRect();\n            let x = Math.floor((e.clientX - bb.x) / TILE_WIDTH);\n            let y = Math.floor((e.clientY - bb.y) / TILE_WIDTH);\n            let index = x + state.map.w * y;\n            setTileHover({ x, y, index });\n          }}\n          style={{\n            position: \"absolute\",\n            top: \"0px\",\n            left: \"0px\",\n            width: \"100%\",\n            height: \"100%\",\n          }}\n        ></div>\n\n        {state.chars.map((char) => (\n          <DisplayChar\n            key={\"cahr\" + char.id}\n            charHover={charHover}\n            onMouseEnter={() => setCharHover(char.id)}\n            onMouseLeave={() => setCharHover(null)}\n            onClick={() => charClick(char.id)}\n            currentChar={currentChar}\n            char={char}\n          ></DisplayChar>\n        ))}\n      </div>\n\n      <div\n        style={{\n          opacity: canAction ? \"1\" : \"0.7\",\n          cursor: canAction ? \"auto\" : \"not-allowed\",\n        }}\n      >\n        <div style={{ display: \"flex\", alignItems: \"center\", margin: \"10px\" }}>\n          {swi(\n            [predictedAction.type === \"none\", () => <div>none</div>],\n            [\n              predictedAction.type !== \"none\",\n              () => (\n                <div\n                  style={{ color: predictedAction.possible ? \"black\" : \"red\" }}\n                >\n                  {predictedAction.type} (cost {predictedAction.cost})\n                </div>\n              ),\n            ]\n          )}\n        </div>\n\n        <div style={{ display: \"flex\", alignItems: \"center\", margin: \"10px\" }}>\n          {[...Array(MAX_PA).keys()].map((i) => (\n            <div\n              key={currentChar.id + \"/\" + i}\n              style={{\n                width: \"30px\",\n                height: \"30px\",\n                borderRadius: \"50%\",\n                margin: \"5px\",\n                border: \"3px solid black\",\n                transition: \"500ms\",\n                background: swi(\n                  [i + 1 <= currentChar.pa - predictedAction.cost, \"#bbb\"],\n                  [i + 1 <= currentChar.pa, \"#5ee\"],\n                  \"#000\"\n                ),\n              }}\n            ></div>\n          ))}\n        </div>\n\n        <div style={{ margin: \"10px\", background: \"#eee\" }}>\n          <div\n            style={{\n              fontSize: \"1.2em\",\n              background: \"#345\",\n              color: \"white\",\n              padding: \"5px\",\n            }}\n          >\n            Power\n          </div>\n          <div style={{ display: \"flex\" }}>\n            <Power\n              onClick={() => setSelectedPower(null)}\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                background: \"#333\",\n                color: \"white\",\n                border: \"3px solid #000\",\n              }}\n            >\n              Move\n            </Power>\n            <Power\n              onClick={pass}\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                background: \"#333\",\n                color: \"white\",\n                border: \"3px solid #000\",\n              }}\n            >\n              Pass\n            </Power>\n            <Power\n              onClick={() =>\n                setSelectedPower((old) => (old === \"attack\" ? null : \"attack\"))\n              }\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                background: selectedPower === \"attack\" ? \"#999\" : \"#333\",\n                color: \"white\",\n                border: \"3px solid #000\",\n              }}\n            >\n              Attack\n            </Power>\n\n            <Power\n              onClick={() => {\n                if (!currentChar.cooldown[\"arrow\"]) {\n                  setSelectedPower((old) => (old === \"arrow\" ? null : \"arrow\"));\n                }\n              }}\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                background: swi(\n                  [currentChar.cooldown[\"arrow\"], \"#a00\"],\n                  selectedPower === \"arrow\" ? \"#999\" : \"#333\"\n                ),\n                color: \"white\",\n                border: \"3px solid #000\",\n              }}\n            >\n              Arrow\n              {currentChar.cooldown[\"arrow\"] &&\n                \" (\" + currentChar.cooldown[\"arrow\"] + \")\"}\n            </Power>\n          </div>\n        </div>\n\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            margin: \"10px\",\n          }}\n        >\n          <div style={{ marginRight: \"20px\", minWidth: \"450px\" }}>\n            <div\n              style={{\n                fontSize: \"1.2em\",\n                background: \"#345\",\n                color: \"white\",\n                padding: \"5px\",\n              }}\n            >\n              History\n            </div>\n            <div\n              ref={actionsRef}\n              style={{\n                background: \"#eee\",\n                height: \"200px\",\n                overflowY: \"scroll\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"flex-start\",\n                alignItems: \"flex-start\",\n              }}\n            >\n              {actionsEffects.map((action, index) => (\n                <div key={index} style={{}}>\n                  <ActionEffectFrag\n                    action={action}\n                    state={state}\n                  ></ActionEffectFrag>\n                </div>\n              ))}\n            </div>\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"flex-start\",\n              alignItems: \"flex-start\",\n              flex: \"1 100 auto\",\n              background: \"#eee\",\n              minWidth: \"450px\",\n            }}\n          >\n            <div\n              style={{\n                fontSize: \"1.2em\",\n                background: \"#345\",\n                color: \"white\",\n                padding: \"5px\",\n                width: \"100%\",\n                boxSizing: \"border-box\",\n              }}\n            >\n              Possible actions\n            </div>\n            {possibleActions.map((action, index) => (\n              <div key={index}>{JSON.stringify(action)}</div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction HoriChar({ name, avatar }) {\n  return (\n    <div\n      style={{\n        fontWeight: \"500\",\n        width: \"100px\",\n        flex: \"none\",\n        display: \"flex\",\n        alignItems: \"center\",\n        background: \"#ccc\",\n        color: \"black\",\n        height: \"30px\",\n      }}\n    >\n      <img style={{ width: \"30px\", marginRight: \"5px\" }} src={avatar}></img>\n      <div>{name}</div>\n    </div>\n  );\n}\n\nfunction CharEffect({ effect, state }) {\n  let char = useMemo(() => {\n    return state.chars.find((e) => e.id === effect.charId);\n  });\n\n  let simpleE = useMemo(() => {\n    let a = _.cloneDeep(effect);\n    delete a.computedAt;\n    delete a.charId;\n    delete a.type;\n    return a;\n  }, [effect]);\n\n  return (\n    <div\n      style={{\n        margin: \"2px\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"flex-start\",\n      }}\n    >\n      <div style={{ marginRight: \"40px\" }}></div>\n      <HoriChar name={char.name} avatar={char.avatar}></HoriChar>\n      <div\n        style={{\n          fontWeight: \"500\",\n          width: \"150px\",\n          padding: \"4px\",\n          height: \"30px\",\n          boxSizing: \"border-box\",\n          flex: \"none\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"flex-start\",\n          background: \"#666\",\n          color: \"white\",\n        }}\n      >\n        {effect.type}\n      </div>\n      <div style={{ fontSize: \"0.8em\", fontWeight: \"bold\", padding: \"2px\" }}>\n        {JSON.stringify(simpleE)}\n      </div>\n    </div>\n  );\n}\n\nfunction ActionEffectFrag({ action, state }) {\n  if (!action.isAction)\n    return <CharEffect effect={action} state={state}></CharEffect>;\n\n  return (\n    <div\n      style={{\n        margin: \"2px\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"flex-start\",\n      }}\n    >\n      <HoriChar name={action.char.name} avatar={action.char.avatar}></HoriChar>\n      <div\n        style={{\n          fontWeight: \"500\",\n          width: \"150px\",\n          padding: \"4px\",\n          height: \"30px\",\n          boxSizing: \"border-box\",\n          flex: \"none\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"flex-start\",\n          background: \"#666\",\n          color: \"white\",\n        }}\n      >\n        {action.type}\n      </div>\n\n      {swi(\n        [\n          action.type === \"move\",\n          () => (\n            <div\n              style={{ fontSize: \"0.8em\", fontWeight: \"bold\", padding: \"2px\" }}\n            >\n              x:{action.x} / y:{action.y}\n            </div>\n          ),\n        ],\n        [\n          action.type === \"attack\" || action.type === \"arrow\",\n          () => {\n            let t = state.chars.find((e) => e.id === action.target);\n            return (\n              <>\n                <HoriChar name={t.name} avatar={t.avatar}></HoriChar>{\" \"}\n                <div\n                  style={{\n                    fontSize: \"0.8em\",\n                    fontWeight: \"bold\",\n                    padding: \"2px\",\n                  }}\n                ></div>\n              </>\n            );\n          },\n        ],\n        [action.type === \"pass\", () => <div></div>]\n      )}\n    </div>\n  );\n}\n\nfunction DisplayChar({\n  char,\n  charHover,\n  currentChar,\n  onMouseEnter,\n  onMouseLeave,\n  onClick,\n}) {\n  let { id, hp, avatar } = char;\n\n  let charRef = useRef(char);\n  useEffect(() => {\n    charRef.current = char;\n  }, [char]);\n\n  let [position, setPosition] = useState({ x: char.x, y: char.y });\n\n  useAnimationFrame(() => {\n    let current = charRef.current;\n    if (!current.anim) {\n      setPosition(current);\n    } else {\n      let elapsed = performance.now() - current.anim.startTime;\n      let max = 500;\n      let lambda = Math.min(1, Math.max(0, elapsed / max));\n\n      if (current.anim.type === EFFECT_TYPES.ANIM_MOVE) {\n        setPosition({\n          x: current.anim.from.x * (1 - lambda) + current.anim.to.x * lambda,\n          y: current.anim.from.y * (1 - lambda) + current.anim.to.y * lambda,\n        });\n      } else if (current.anim.type === EFFECT_TYPES.ANIM_ATTACK) {\n        let dd = smoothstep(0, 0.5, lambda) * smoothstep(1.0, 0.5, lambda);\n        setPosition({\n          x: current.x * (1 - dd) + (current.x + current.anim.d.x * 0.5) * dd,\n          y: current.y * (1 - dd) + (current.y + current.anim.d.y * 0.5) * dd,\n        });\n      } else if (current.anim.type === EFFECT_TYPES.ANIM_ARROW) {\n        let dd = smoothstep(0, 0.5, lambda) * smoothstep(1.0, 0.5, lambda);\n        setPosition({\n          x:\n            current.x * (1 - dd) +\n            (current.x + (0.5 * current.anim.d.x) / current.anim.d.l) * dd,\n          y:\n            current.y * (1 - dd) +\n            (current.y + (0.5 * current.anim.d.y) / current.anim.d.l) * dd,\n        });\n      }\n      if (lambda === 1) {\n        current.anim = null;\n      }\n    }\n  });\n\n  return (\n    <div\n      key={id}\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={onMouseLeave}\n      onClick={onClick}\n      style={{\n        position: \"absolute\",\n        left: (0.15 + position.x) * TILE_WIDTH + \"px\",\n        top: (0.15 + position.y) * TILE_WIDTH + \"px\",\n        color: \"#eee\",\n        fontWeight: 500,\n        background: charHover === id ? \"#fff\" : \"#0000\",\n        width: TILE_WIDTH * 0.7 + \"px\",\n        height: TILE_WIDTH * 0.7 + \"px\",\n\n        boxShadow:\n          currentChar.id === id\n            ? \"0px 0px 20px blue,0px 0px 5px #0009\"\n            : \"0px 0px 20px #0009\",\n        borderRadius: \"50%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        userSelect: \"none\",\n        // transition: \"300ms\",\n      }}\n    >\n      {\" \"}\n      <img style={{ width: \"30px\" }} src={avatar}></img>\n      <div\n        style={{\n          background: \"#111\",\n          padding: \"2px 1px 2px 2px\",\n          display: \"flex\",\n        }}\n      >\n        {[...Array(DEFAULT_HP).keys()].map((i) => (\n          <div\n            key={i}\n            style={{\n              width: \"4px\",\n              height: \"4px\",\n              borderRadius: \"1px\",\n              margin: \"0px 1px 0px 0px\",\n              transition: \"300ms\",\n              background: swi(\n                [hp === 0, \"#000\"],\n                [i + 1 <= hp, \"green\"],\n                \"#e00\"\n              ),\n            }}\n          ></div>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import \"./App.css\";\n// eslint-disable-next-line\nimport MyWorker from \"comlink-loader!./StateCompute\";\n\nimport Draw from \"./Draw\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\n\nimport {\n  applyEffects,\n  enumeratePossibleActions,\n  evaluateAction,\n  exploreAndRate,\n  minimalStateCopy,\n  DEFAULT_HP,\n  nextChars,\n  bestAction,\n  generateBestIAAction,\n  DEFAULT_PA,\n} from \"./StateCompute\";\n\nconst worker = new MyWorker();\n\n// (async () => {\n//   let res = await worker.test(5);\n//   console.log(\"wo\", res);\n// })();\n\nvar _ = require(\"lodash\");\n\nlet TILES = `\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n  1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, \n  1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, \n  1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, \n  1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, \n  1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n  1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1,\n  1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1,\n  1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1,\n  1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1,\n  1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n  1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n  1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, \n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1\n`;\n\nlet MAP = {\n  w: 14,\n  h: 14,\n  tiles: TILES.replace(\" \", \"\")\n    .split(\",\")\n    .map((e) => parseInt(e)),\n};\n\nlet alreadyReducing = null;\nasync function reducer(old, action) {\n  console.log(\"dispatch start\", action.type);\n  if (action.type === \"tick\") {\n    if (old.currentChar.user === \"me\") {\n      return old;\n    } else {\n      //await worker.\n      action = await worker.generateBestIAAction(old);\n    }\n  }\n  let state = _.cloneDeep(old);\n\n  let { cost, possible, effects } = evaluateAction(\n    state,\n    action,\n    old.currentChar.user === \"me\"\n  );\n  if (possible) {\n    state.actions.push({\n      computedAt: performance.now(),\n      ...action,\n      char: state.currentChar,\n      cost,\n    });\n\n    applyEffects(state, effects, true);\n  }\n  console.log(\"dispatch end\");\n\n  return state;\n}\n\nfunction defaultState() {\n  let randId = () => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER);\n\n  let ids = [0, randId(), randId(), randId(), randId(), randId()];\n\n  let s = {\n    lastEffectTime: performance.now(),\n\n    map: MAP,\n    chars: [\n      {\n        id: ids[0],\n        x: 1,\n        y: 1,\n        name: \"foo\",\n        lastPlayedTurn: -1,\n        user: \"me\",\n        team: \"ia\",\n        pa: DEFAULT_PA,\n        avatar: \"https://avatars.dicebear.com/api/bottts/\" + ids[0] + \".svg\",\n        hp: DEFAULT_HP,\n        cooldown: {},\n      },\n      {\n        id: ids[1],\n        x: 5,\n        y: 2,\n        name: \"bar\",\n        lastPlayedTurn: -1,\n        user: \"ia2\",\n        team: \"ia2\",\n        pa: DEFAULT_PA,\n        avatar: \"https://avatars.dicebear.com/api/bottts/\" + ids[1] + \".svg\",\n        hp: DEFAULT_HP,\n        cooldown: {},\n      },\n      {\n        id: ids[2],\n        x: 5,\n        y: 5,\n        name: \"baz\",\n        lastPlayedTurn: -1,\n        user: \"ia3\",\n        team: \"ia3\",\n        pa: DEFAULT_PA,\n        avatar: \"https://avatars.dicebear.com/api/bottts/\" + ids[2] + \".svg\",\n        hp: DEFAULT_HP,\n        cooldown: {},\n      },\n      {\n        id: ids[3],\n        x: 11,\n        y: 11,\n        name: \"zoo\",\n        lastPlayedTurn: -1,\n        user: \"ia4\",\n        team: \"ia4\",\n        pa: DEFAULT_PA,\n        avatar: \"https://avatars.dicebear.com/api/bottts/\" + ids[3] + \".svg\",\n        hp: DEFAULT_HP,\n        cooldown: {},\n      },\n      {\n        id: ids[4],\n        x: 2,\n        y: 11,\n        name: \"moo\",\n        lastPlayedTurn: -1,\n        user: \"ia5\",\n        team: \"ia5\",\n        pa: DEFAULT_PA,\n        avatar: \"https://avatars.dicebear.com/api/bottts/\" + ids[4] + \".svg\",\n        hp: DEFAULT_HP,\n        cooldown: {},\n      },\n    ],\n    actions: [],\n    effects: [],\n  };\n\n  s.nextChars = nextChars(s);\n  s.currentChar = s.nextChars[0];\n\n  return s;\n}\n\nfunction App() {\n  let user = \"me\";\n\n  let stateRef = useRef(defaultState());\n\n  let dispatch = useCallback(async (action) => {\n    if (alreadyReducing) {\n      console.error(\n        \"alreadyReducing !!!\",\n        alreadyReducing,\n        \"while starting\",\n        action\n      );\n      if (action.type === \"tick\") return;\n    }\n    alreadyReducing = action;\n    stateRef.current = await reducer(stateRef.current, action);\n    alreadyReducing = null;\n    setState(stateRef.current);\n  }, []);\n\n  let [state, setState] = useState(stateRef.current);\n\n  useEffect(() => {\n    setTimeout(() => {\n      dispatch({ type: \"tick\" });\n    }, 500);\n  }, [state]);\n\n  return (\n    <div className=\"App\">\n      <Draw user={user} state={state} do_action={dispatch}></Draw>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}