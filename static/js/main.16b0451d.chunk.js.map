{"version":3,"sources":["webpack:///./src/StateCompute.js?0f56","webpack:///./src/StateCompute.js?4de9","h.js","StateCompute.js","Draw.js","App.js","reportWebVitals.js","index.js"],"names":["inst","wrap","Worker","module","exports","f","this","getOrEval","e","swi","i","arguments","length","condition","arm","Array","isArray","flatstep","a","b","x","Math","max","min","clamp","smoothstep","t","DEFAULT_HP","require","POWER","arrow","name","damage","cooldown","cost","maxDist","fire","radius","radiusToUV","r","u","v","diffPos","d","y","l","sqrt","indexFromPos","p","map","w","tileFromPos","tiles","enumeratePossibleActions","state","allActions","currentChar","forEach","dx","dy","newPos","push","type","chars","enemy","team","target","id","actions","action","evaluateAction","possible","effects","EFFECT_TYPES","END_WHOLE_TURN","BEGIN_TURN","REACT_TO_TILE","END_TURN","REGEN_PA","LOSE_PA","LOSE_HP","MOVE","EMPTY_POWER","SET_FIRE","ANIM_MOVE","ANIM_ATTACK","ANIM_ARROW","ANIM_END_TURN","currentCharId","tile","isWalkable","pa","filter","charId","from","to","find","hp","hpLost","power","h","index","tilesIndexFromPosRadius","tileIndex","applyEffects","animation","newEffects","effect","char","wasPositive","nextChars","tileId","Object","keys","k","lastPlayedTurn","Number","isInteger","tileEffect","includes","anim","startTime","performance","now","computedAt","tileName","nexts","MAX_SAFE_INTEGER","alives","slice","_","TILE_WIDTH","Power","styled","div","Draw","user","do_action","useState","charHover","setCharHover","tileHover","setTileHover_","setTileHover","useMemo","throttle","actionsEffects","all","isAction","concat","sort","splice","canAction","pass","useCallback","selectedPower","setSelectedPower","predictedAction","setPredictedAction","actionsRef","useRef","useEffect","current","scrollTop","scrollHeight","possibleActions","ticker","setTicker","timer","handle","tickAfter","setTimeout","old","eva","rawAction","tileClick","charClick","mapRef","style","width","display","flexDirection","justifyContent","alignItems","padding","boxSizing","onMouseEnter","onMouseLeave","background","margin","color","userSelect","border","borderRadius","src","avatar","position","cursor","chunk","row","rowIndex","colIndex","height","transition","top","left","transform","onClick","ref","onMouseMove","bb","getBoundingClientRect","floor","clientX","clientY","pointerEvents","undefined","DisplayChar","Detail","opacity","fontSize","marginRight","minWidth","overflowY","ActionEffectFrag","flex","JSON","stringify","HoriChar","fontWeight","CharEffect","simpleE","cloneDeep","charRef","setPosition","endTurnAnim","setEndTurnAnim","callback","stanRef","React","previousTimeRef","animate","time","deltaTime","requestAnimationFrame","cancelAnimationFrame","useAnimationFrame","elapsed","lambda","dd","boxShadow","zIndex","process","DLine","category","value","textAlign","marginLeft","worker","MyWorker","MAP","replace","split","parseInt","alreadyReducing","reducer","console","log","generateBestIAAction","App","stateRef","randId","random","ids","s","lastEffectTime","defaultState","dispatch","error","setState","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.16b0451d.chunk.js","sourcesContent":["var wrap = require('comlink').wrap,Worker = require(\"!worker-loader?{}!/home/ctrl/prog/webturn/front/node_modules/comlink-loader/dist/comlink-worker-loader.js!/home/ctrl/prog/webturn/front/node_modules/react-scripts/node_modules/babel-loader/lib/index.js??ref--5-oneOf-2!/home/ctrl/prog/webturn/front/src/StateCompute.js\"),inst;module.exports = function f() {if (this instanceof f) return wrap(Worker());return inst || (inst = wrap(Worker()));};","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"cca13a8a6bc59111c34f.worker.js\");\n};","import React from \"react\";\n\nfunction getOrEval(e) {\n  return typeof e === \"function\" ? e() : e;\n}\nexport function swi() {\n  for (let i = 0; i < arguments.length - 1; i++) {\n    let [condition, arm] = arguments[i];\n    if (getOrEval(condition)) {\n      return getOrEval(arm);\n    }\n  }\n\n  let i = arguments.length - 1;\n  if (!Array.isArray(arguments[i])) return getOrEval(arguments[i]);\n  let [condition, arm] = arguments[i];\n  if (getOrEval(condition)) {\n    return getOrEval(arm);\n  }\n}\n\nexport const useAnimationFrame = (callback) => {\n  // Use useRef for mutable variables that we want to persist\n  // without triggering a re-render on their change\n  const stanRef = React.useRef();\n  const previousTimeRef = React.useRef();\n\n  const animate = (time) => {\n    if (previousTimeRef.current !== undefined) {\n      const deltaTime = time - previousTimeRef.current;\n      callback(deltaTime);\n    }\n    previousTimeRef.current = time;\n    stanRef.current = requestAnimationFrame(animate);\n  };\n\n  React.useEffect(\n    () => {\n      stanRef.current = requestAnimationFrame(animate);\n      return () => cancelAnimationFrame(stanRef.current);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n};\n\nexport let clamp = (x, a, b) => Math.max(a, Math.min(b, x));\nexport let flatstep = (a, b, x) => clamp((x - a) / (b - a), 0, 1);\nexport let ease = (t) => (t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t);\nexport let smoothstep = (a, b, x) => ease(flatstep(a, b, x));\nexport let mix = (a, b, m) => a * (1.0 - m) + b * m;\n\nfunction asleep(delay) {\n  return new Promise((r) => setTimeout(r, delay));\n}\n","var _ = require(\"lodash\");\n\nexport const DEFAULT_HP = 10;\nexport const MAX_HP = 15;\nexport const DEFAULT_PA = 10;\nexport const MAX_PA = 15;\nexport const PA_REGEN = 10;\n\nexport const POWER = {\n  arrow: {\n    name: \"arrow\",\n    damage: 1,\n    cooldown: 2,\n    cost: 4,\n    maxDist: 7,\n  },\n  fire: {\n    name: \"fire\",\n    damage: 1,\n    radius: 1.5,\n    cooldown: 4,\n    cost: 5,\n    maxDist: 7,\n  },\n};\n\nexport function radiusToUV(r) {\n  if (r === 0) {\n    return [{ u: 0, v: 0 }];\n  }\n  if (r === 1) {\n    return [\n      { u: 0, v: 0 },\n      { u: 1, v: 0 },\n      { u: 0, v: 1 },\n      { u: -1, v: 0 },\n      { u: 0, v: -1 },\n    ];\n  }\n  if (r === 1.5) {\n    return [\n      { u: 0, v: 0 },\n      { u: 1, v: 0 },\n      { u: 0, v: 1 },\n      { u: -1, v: 0 },\n      { u: 0, v: -1 },\n      { u: 1, v: 1 },\n      { u: 1, v: -1 },\n      { u: -1, v: -1 },\n      { u: -1, v: 1 },\n    ];\n  }\n  if (r === 2) {\n    return [\n      { u: 0, v: 0 },\n      { u: 1, v: 0 },\n      { u: 0, v: 1 },\n      { u: -1, v: 0 },\n      { u: 0, v: -1 },\n      { u: 1, v: 1 },\n      { u: 1, v: -1 },\n      { u: -1, v: -1 },\n      { u: -1, v: 1 },\n      { u: 2, v: 0 },\n      { u: 0, v: 2 },\n      { u: -2, v: 0 },\n      { u: 0, v: -2 },\n    ];\n  }\n  if (r === 2.5) {\n    return [\n      { u: 0, v: 0 },\n      { u: 1, v: 0 },\n      { u: 0, v: 1 },\n      { u: -1, v: 0 },\n      { u: 0, v: -1 },\n      { u: 1, v: 1 },\n      { u: 1, v: -1 },\n      { u: -1, v: -1 },\n      { u: -1, v: 1 },\n      { u: 2, v: 0 },\n      { u: 0, v: 2 },\n      { u: -2, v: 0 },\n      { u: 0, v: -2 },\n\n      { u: 2, v: 1 },\n      { u: 1, v: 2 },\n      { u: -2, v: 1 },\n      { u: 1, v: -2 },\n\n      { u: 2, v: -1 },\n      { u: -1, v: 2 },\n      { u: -2, v: -1 },\n      { u: -1, v: -2 },\n    ];\n  }\n}\n\n/**\n *\n * @param {Object} a\n * @param {number} a.x\n * @param {number} a.y\n * @param {Object} b\n * @param {number} b.x\n * @param {number} b.y\n * @returns {{x:number, y:number}}\n */\nexport function addPos(a, b) {\n  return { x: b.x + a.x, y: b.y + a.y };\n}\n/**\n *\n * @param {Object} a\n * @param {number} a.x\n * @param {number} a.y\n * @param {Object} b\n * @param {number} b.x\n * @param {number} b.y\n * @returns {{x:number, y:number, l:number}}\n */\nexport function diffPos(a, b) {\n  let d = { x: b.x - a.x, y: b.y - a.y };\n  d.l = Math.sqrt(d.x * d.x + d.y * d.y);\n  return d;\n}\n\n/**\n * @param {Object} p\n * @param {number} p.x\n * @param {number} p.y\n */\nexport function indexFromPos(p, map) {\n  return p.x + p.y * map.w;\n}\n/**\n * @param {Object} p\n * @param {number} p.x\n * @param {number} p.y\n */\nexport function tileFromPos(p, map) {\n  return map.tiles[p.x + p.y * map.w];\n}\n\n/**\n * @param {Object} p\n * @param {number} p.x\n * @param {number} p.y\n */\nexport function tilesIndexFromPosRadius(p, r, map) {\n  let tiles = [];\n  let uv = radiusToUV(r);\n  uv.forEach(({ u, v }) => {\n    let x = p.x + u;\n    let y = p.y + v;\n    if (x >= 0 && x < map.w && y >= 0 && y < map.h) {\n      let index = x + y * map.w;\n      tiles.push(index);\n    }\n  });\n\n  return tiles;\n}\n\nexport function rateState(state, fromIdPov) {\n  let score = 0;\n  let current = state.chars.find((e) => e.id === fromIdPov);\n  let myTeam = current.team;\n\n  let closestEnnemy = null;\n  state.chars.forEach((other) => {\n    let ally = other.team === myTeam;\n    let factor = ally ? 1 : -1;\n    score += (other.pa * 0.0 + Math.pow(other.hp, 0.5)) * factor;\n\n    if (!ally && other.hp > 0) {\n      let d = diffPos(other, current);\n      if (!closestEnnemy || d.l < closestEnnemy.l) {\n        closestEnnemy = { l: d.l, ...other };\n      }\n    }\n  });\n\n  if (closestEnnemy) {\n    score -= closestEnnemy.l * 0.01;\n  }\n\n  return score;\n}\n\nexport function enumeratePossibleActions(state) {\n  let allActions = [];\n  const currentChar = state.currentChar;\n  //Move\n  [\n    [-1, -1],\n    [-1, 0],\n    [-1, 1],\n    [0, -1],\n    [0, 1],\n    [1, -1],\n    [1, 0],\n    [1, 1],\n  ].forEach(([dx, dy]) => {\n    let newPos = addPos(currentChar, { x: dx, y: dy });\n    allActions.push({ type: \"move\", ...newPos });\n  });\n  //Attack\n  state.chars.forEach((enemy) => {\n    if (enemy.team !== currentChar.team) {\n      allActions.push({ type: \"attack\", target: enemy.id });\n    }\n  });\n  //Arrow\n  state.chars.forEach((enemy) => {\n    if (enemy.team !== currentChar.team) {\n      allActions.push({ type: \"arrow\", target: enemy.id });\n    }\n  });\n  //Pass\n  {\n    allActions.push({ type: \"pass\" });\n  }\n\n  let actions = [];\n  allActions.forEach((action) => {\n    let { cost, possible, effects } = evaluateAction(state, action);\n    if (possible) {\n      actions.push({ ...action, cost, effects });\n    }\n  });\n\n  return actions;\n}\n\nexport function bestAction(old, actions_) {\n  let actions = actions_.map((action) => {\n    let newSubState = minimalStateCopy(old);\n\n    applyEffects(newSubState, action.effects);\n    // let score = rateState(newSubState, old.currentChar.id);\n\n    let score = exploreAndRate(newSubState, old.currentChar.id, 4);\n\n    return { ...action, score };\n  });\n\n  //Take one of the best outcome\n  actions.sort((a, b) => b.score - a.score);\n  actions = _.takeWhile(actions, (e) => e.score === actions[0].score);\n\n  return _.sample(actions);\n}\n\nexport function generateBestIAAction(state) {\n  let start = performance.now();\n  let actions = enumeratePossibleActions(state);\n  let action = bestAction(state, actions);\n  console.log(\"IA PLAY took:\", performance.now() - start, \"ms\");\n  return action;\n}\n\nexport const EFFECT_TYPES = {\n  END_WHOLE_TURN: \"END_WHOLE_TURN\",\n  BEGIN_TURN: \"BEGIN_TURN\",\n  REACT_TO_TILE: \"REACT_TO_TILE\",\n  END_TURN: \"END_TURN\",\n  REGEN_PA: \"REGEN_PA\",\n  LOSE_PA: \"LOSE_PA\",\n  LOSE_HP: \"LOSE_HP\",\n  MOVE: \"MOVE\",\n\n  EMPTY_POWER: \"EMPTY_POWER\",\n\n  //TILE EFFECT\n  SET_FIRE: \"SET_FIRE\",\n\n  //ANIMATION EFFECT\n  ANIM_MOVE: \"ANIM_MOVE\",\n  ANIM_ATTACK: \"ANIM_ATTACK\",\n  ANIM_ARROW: \"ANIM_ARROW\",\n  ANIM_END_TURN: \"ANIM_END_TURN\",\n};\n\n/**\n *\n * @param {*} state\n * @param {*} action\n * @returns {{cost:number, possible:boolean, effects : *}}\n */\nexport function evaluateAction(state, action) {\n  const currentChar = state.currentChar;\n  const currentCharId = state.currentChar.id;\n  let cost = 0;\n  let possible = false;\n\n  let effects = [];\n\n  if (action.type === \"move\") {\n    let tile = tileFromPos(action, state.map);\n    if (isWalkable(tile)) {\n      let d = diffPos(currentChar, action);\n      let canReach = d.l > 0 && d.l < 1.5;\n      if (canReach) {\n        cost = d.l === 1 ? 2 : 3;\n        let hasEnoughMana = cost <= currentChar.pa;\n        if (hasEnoughMana) {\n          let noOtherChar =\n            state.chars.filter((e) => e.x === action.x && e.y === action.y)\n              .length === 0;\n          possible = noOtherChar;\n          if (possible) {\n            effects.push({\n              type: EFFECT_TYPES.LOSE_PA,\n              charId: currentCharId,\n              cost,\n            });\n            effects.push({\n              type: EFFECT_TYPES.ANIM_MOVE,\n              charId: currentCharId,\n              from: { x: currentChar.x, y: currentChar.y },\n              to: { x: action.x, y: action.y },\n            });\n            effects.push({\n              type: EFFECT_TYPES.MOVE,\n              charId: currentCharId,\n              x: action.x,\n              y: action.y,\n            });\n          }\n        }\n      }\n    }\n  } else if (action.type === \"attack\") {\n    cost = 3;\n    let target = state.chars.find((e) => e.id === action.target);\n\n    if (target.hp > 0) {\n      let d = diffPos(currentChar, target);\n      let canReach = d.l > 0 && d.l < 1.5;\n      if (canReach) {\n        let hasEnoughMana = cost <= currentChar.pa;\n        if (hasEnoughMana) {\n          possible = true;\n          effects.push({\n            type: EFFECT_TYPES.ANIM_ATTACK,\n            charId: currentCharId,\n            d: d,\n          });\n          effects.push({\n            type: EFFECT_TYPES.LOSE_PA,\n            charId: currentCharId,\n            cost,\n          });\n\n          effects.push({\n            type: EFFECT_TYPES.LOSE_HP,\n            charId: action.target,\n            hpLost: 1,\n          });\n        }\n      }\n    }\n  } else if (action.type === \"arrow\") {\n    let power = POWER[action.type];\n    cost = power.cost;\n    let target = state.chars.find((e) => e.id === action.target);\n\n    if (!currentChar.cooldown[action.type] && target.hp > 0) {\n      let d = diffPos(currentChar, target);\n      let canReach = d.l > 0 && d.l <= power.maxDist;\n      if (canReach) {\n        let hasEnoughMana = cost <= currentChar.pa;\n        if (hasEnoughMana) {\n          possible = true;\n          effects.push({\n            type: EFFECT_TYPES.EMPTY_POWER,\n            charId: currentCharId,\n            power: power.name,\n          });\n          effects.push({\n            type: EFFECT_TYPES.ANIM_ARROW,\n            charId: currentCharId,\n            from: { x: currentChar.x, y: currentChar.y },\n            to: { x: target.x, y: target.y },\n            d: d,\n          });\n          effects.push({\n            type: EFFECT_TYPES.LOSE_PA,\n            charId: currentCharId,\n            cost,\n          });\n\n          effects.push({\n            type: EFFECT_TYPES.LOSE_HP,\n            charId: action.target,\n            hpLost: 1,\n          });\n        }\n      }\n    }\n  } else if (action.type === \"fire\") {\n    let power = POWER[action.type];\n    cost = power.cost;\n\n    if (!currentChar.cooldown[action.type]) {\n      let d = diffPos(currentChar, action);\n      let canReach = d.l <= power.maxDist;\n      if (canReach) {\n        let hasEnoughMana = cost <= currentChar.pa;\n        if (hasEnoughMana) {\n          possible = true;\n\n          let tileIndices = tilesIndexFromPosRadius(\n            action,\n            power.radius,\n            state.map\n          );\n\n          tileIndices.forEach((tileIndex) => {\n            effects.push({\n              type: EFFECT_TYPES.SET_FIRE,\n              tileIndex,\n            });\n          });\n\n          effects.push({\n            type: EFFECT_TYPES.EMPTY_POWER,\n            charId: currentCharId,\n            power: power.name,\n          });\n          effects.push({\n            type: EFFECT_TYPES.ANIM_ARROW,\n            charId: currentCharId,\n            from: { x: currentChar.x, y: currentChar.y },\n            to: { x: action.x, y: action.y },\n            d: d,\n          });\n          effects.push({\n            type: EFFECT_TYPES.LOSE_PA,\n            charId: currentCharId,\n            cost,\n          });\n\n          state.chars.forEach((e) => {\n            if (diffPos(e, action).l <= power.radius) {\n              effects.push({\n                type: EFFECT_TYPES.LOSE_HP,\n                charId: e.id,\n                hpLost: 1,\n              });\n            }\n          });\n        }\n      }\n    }\n  } else if (action.type === \"pass\") {\n    cost = 0;\n    possible = true;\n    effects.push({ type: EFFECT_TYPES.ANIM_END_TURN, charId: currentCharId });\n    effects.push({ type: EFFECT_TYPES.END_TURN, charId: currentCharId });\n  }\n\n  return { cost, possible, effects };\n}\n\nexport function applyEffects(state, effects, animation = false) {\n  if (effects.length === 0) return;\n\n  let newEffects = [];\n  effects.forEach((effect) => {\n    if (effect.type === EFFECT_TYPES.LOSE_HP) {\n      let char = state.chars.find((e) => e.id === effect.charId);\n      let wasPositive = char.hp > 0;\n      char.hp = Math.max(0, char.hp - effect.hpLost);\n\n      if (wasPositive && char.hp <= 0 && state.currentChar.id === char.id) {\n        state.nextChars = nextChars(state);\n        state.currentChar = state.nextChars[0];\n        newEffects.push({ type: EFFECT_TYPES.END_TURN, charId: effect.charId });\n      }\n    } else if (effect.type === EFFECT_TYPES.LOSE_PA) {\n      state.chars.find((e) => e.id === effect.charId).pa -= effect.cost;\n    } else if (effect.type === EFFECT_TYPES.EMPTY_POWER) {\n      state.chars.find((e) => e.id === effect.charId).cooldown[effect.power] =\n        POWER[effect.power].cooldown;\n    } else if (effect.type === EFFECT_TYPES.MOVE) {\n      let char = state.chars.find((e) => e.id === effect.charId);\n      char.x = effect.x;\n      char.y = effect.y;\n      let tile = tileFromPos(effect, state.map);\n      if (tile.effects.length > 0) {\n        newEffects.push({\n          type: EFFECT_TYPES.REACT_TO_TILE,\n          charId: char.id,\n          tileId: indexFromPos(char, state.map),\n        });\n      }\n    } else if (effect.type === EFFECT_TYPES.REGEN_PA) {\n      let char = state.chars.find((e) => e.id === effect.charId);\n      char.pa = Math.min(char.pa + PA_REGEN, MAX_PA);\n    } else if (effect.type === EFFECT_TYPES.REACT_TO_TILE) {\n      let char = state.chars.find((e) => e.id === effect.charId);\n      let tile = state.map.tiles[effect.tileId];\n      tile.effects.forEach((e) => {\n        if (e.type === \"fire\") {\n          newEffects.push({\n            type: EFFECT_TYPES.LOSE_HP,\n            charId: char.id,\n            hpLost: 1,\n          });\n        }\n      });\n    } else if (effect.type === EFFECT_TYPES.END_TURN) {\n      let char = state.chars.find((e) => e.id === effect.charId);\n      Object.keys(char.cooldown).forEach((k) => {\n        let v = char.cooldown[k];\n        if (v === 1) {\n          delete char.cooldown[k];\n        } else {\n          char.cooldown[k] -= 1;\n        }\n      });\n      char.lastPlayedTurn += 1;\n\n      if (char.hp > 0)\n        newEffects.push({ type: EFFECT_TYPES.REGEN_PA, charId: effect.charId });\n\n      if (state.nextChars[1] === \"/\") {\n        newEffects.push({ type: EFFECT_TYPES.END_WHOLE_TURN });\n      }\n      state.nextChars = nextChars(state);\n      state.currentChar = state.nextChars[0];\n\n      newEffects.push({ type: EFFECT_TYPES.BEGIN_TURN });\n    } else if (effect.type === EFFECT_TYPES.END_WHOLE_TURN) {\n      state.map.tiles.forEach((tile) => {\n        tile.effects = tile.effects\n          .map((e) => {\n            if (Number.isInteger(e.cooldown)) {\n              e.cooldown -= 1;\n            }\n            return e;\n          })\n          .filter((e) => e.cooldown !== 0);\n      });\n    } else if (effect.type === EFFECT_TYPES.BEGIN_TURN) {\n      newEffects.push({\n        type: EFFECT_TYPES.REACT_TO_TILE,\n        charId: state.currentChar.id,\n        tileId: indexFromPos(state.currentChar, state.map),\n      });\n    } else if (effect.type === EFFECT_TYPES.SET_FIRE) {\n      let tile = state.map.tiles[effect.tileIndex];\n      let tileEffect = tile.effects.find((e) => e.type === \"fire\");\n      if (!tileEffect) {\n        tileEffect = { type: \"fire\" };\n        tile.effects.push(tileEffect);\n      }\n      tileEffect.cooldown = 2;\n    }\n\n    if (animation === true) {\n      if (\n        [\n          EFFECT_TYPES.ANIM_ATTACK,\n          EFFECT_TYPES.ANIM_MOVE,\n          EFFECT_TYPES.ANIM_ARROW,\n          EFFECT_TYPES.ANIM_END_TURN,\n        ].includes(effect.type)\n      ) {\n        state.chars.find((e) => e.id === effect.charId).anim = {\n          ...effect,\n          startTime: performance.now(),\n        };\n      }\n    }\n\n    state.effects.push({ computedAt: performance.now(), ...effect });\n  });\n\n  applyEffects(state, newEffects, animation);\n}\n\nexport function minimalStateCopy(state) {\n  return _.cloneDeep({\n    chars: state.chars,\n    map: state.map,\n\n    currentChar: state.currentChar,\n    nextChars: state.nextChars,\n    actions: [],\n    effects: [],\n  });\n}\n\nexport function exploreAndRate(state, charIdPov, depth) {\n  //Turn has ended for charIdPov, or search depth limit is reached.\n  if (depth === 0 || state.currentChar.id !== charIdPov) {\n    return rateState(state, charIdPov);\n  }\n\n  // let prefix = \"\";\n  // if (depth === 3) prefix = \" \";\n  // if (depth === 2) prefix = \"  \";\n  // if (depth === 1) prefix = \"   \";\n  // console.log(prefix, \"explore\", depth, \"current\", state.currentChar.name);\n  let maxScore = -9999;\n\n  let actions = enumeratePossibleActions(state);\n  actions.forEach((action) => {\n    let newSubState = minimalStateCopy(state);\n    applyEffects(newSubState, action.effects);\n    let score = exploreAndRate(newSubState, charIdPov, depth - 1);\n    maxScore = Math.max(score, maxScore);\n  });\n\n  return maxScore;\n}\n\nexport function isWalkable(tile) {\n  return tile.type === 0;\n}\n\nexport function tileName(tile) {\n  if (tile.type === 0) return \"ground\";\n  if (tile.type === 1) return \"wall\";\n  return \"unknown\";\n}\n\nexport let nextChars = (state) => {\n  let nexts = [];\n  let lastPlayedTurn = Number.MAX_SAFE_INTEGER;\n\n  let alives = state.chars.filter((e) => e.hp > 0);\n\n  alives.forEach((char) => {\n    lastPlayedTurn = Math.min(lastPlayedTurn, char.lastPlayedTurn);\n  });\n\n  alives\n    .filter((char) => char.lastPlayedTurn === lastPlayedTurn)\n    .forEach((char) => {\n      nexts.push(char);\n    });\n\n  nexts.push(\"/\");\n\n  while (nexts.length < 10) {\n    alives.forEach((char) => {\n      nexts.push(char);\n    });\n  }\n  return nexts.slice(0, 10);\n};\n","import { smoothstep, swi, useAnimationFrame } from \"./h\";\n\nimport styled, { keyframes } from \"styled-components\";\n\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport {\n  DEFAULT_HP,\n  EFFECT_TYPES,\n  enumeratePossibleActions,\n  evaluateAction,\n  MAX_PA,\n  POWER,\n  radiusToUV,\n  tileName,\n} from \"./StateCompute\";\n\nvar _ = require(\"lodash\");\n\nconst TILE_WIDTH = 50;\n\nconst Power = styled.div`\n  width: 50px;\n  height: 50px;\n  transition: 200ms;\n  cursor: pointer;\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nexport default function Draw({ state, user, do_action }) {\n  let [charHover, setCharHover] = useState(null);\n  let [tileHover, setTileHover_] = useState(null);\n\n  let setTileHover = useMemo(() => _.throttle(setTileHover_, 30), []);\n\n  let actionsEffects = useMemo(() => {\n    let all = state.actions\n      .map((e) => {\n        return { isAction: true, ...e };\n      })\n      .concat(state.effects);\n    all.sort((a, b) => a.computedAt - b.computedAt);\n\n    all.splice(0, all.length - 100);\n    return all;\n  }, [state]);\n\n  let currentChar = state.currentChar;\n  let canAction = currentChar.user === user;\n\n  const pass = useCallback(() => {\n    if (canAction) {\n      do_action({ type: \"pass\", charId: state.currentChar.id, user });\n    }\n  }, [state, user, do_action]);\n\n  const [selectedPower, setSelectedPower] = useState(null);\n  const [predictedAction, setPredictedAction] = useState({\n    possible: false,\n    cost: 0,\n    type: \"none\",\n  });\n\n  const actionsRef = useRef();\n\n  useEffect(() => {\n    let e = actionsRef.current;\n    e.scrollTop = e.scrollHeight;\n  }, [state]);\n\n  useEffect(() => {\n    setSelectedPower(null);\n  }, [state]);\n\n  let possibleActions = useMemo(() => {\n    return enumeratePossibleActions(state).map((e) => {\n      delete e.effects;\n      return e;\n    });\n  }, [state]);\n\n  useEffect(() => {\n    if (canAction && possibleActions.length === 1) {\n      pass();\n    }\n  }, [canAction, possibleActions, pass]);\n\n  let [ticker, setTicker] = useState(0);\n  let timer = useRef({ handle: null, tickAfter: false });\n  useEffect(() => {\n    if (!timer.current.handle) {\n      timer.current.handle = setTimeout(() => {\n        timer.current.handle = null;\n        if (timer.current.tickAfter) {\n          setTicker((old) => old + 1);\n          timer.current.tickAfter = false;\n        }\n      }, 100);\n    } else {\n      timer.current.tickAfter = true;\n      return;\n    }\n    let type = \"none\";\n    let cost = 0;\n    let possible = false;\n    let eva = null;\n    let rawAction = null;\n    //Simple move\n    if (selectedPower === null && tileHover !== null && charHover === null) {\n      type = \"move\";\n      rawAction = {\n        type,\n        x: tileHover.x,\n        y: tileHover.y,\n      };\n    } else if (\n      (selectedPower === \"attack\" || selectedPower === null) &&\n      charHover !== null &&\n      charHover !== state.currentChar.id\n    ) {\n      type = \"attack\";\n      rawAction = {\n        type,\n        target: charHover,\n      };\n    } else if (\n      selectedPower === \"arrow\" &&\n      charHover !== null &&\n      charHover !== state.currentChar.id\n    ) {\n      type = \"arrow\";\n      rawAction = {\n        type,\n        target: charHover,\n      };\n    } else if (selectedPower === \"fire\" && tileHover !== null) {\n      type = \"fire\";\n      rawAction = {\n        type,\n        x: tileHover.x,\n        y: tileHover.y,\n      };\n    }\n    if (rawAction) {\n      eva = evaluateAction(state, rawAction);\n    }\n    if (eva) {\n      cost = eva.cost;\n      possible = eva.possible;\n    }\n    setPredictedAction({ type, possible, cost, rawAction });\n  }, [state, selectedPower, charHover, tileHover, ticker]);\n\n  const tileClick = useCallback(() => {\n    if (canAction && predictedAction.possible === true) {\n      do_action(predictedAction.rawAction);\n    }\n  }, [do_action, predictedAction]);\n\n  const charClick = useCallback(() => {\n    if (canAction && predictedAction.possible === true) {\n      do_action(predictedAction.rawAction);\n    }\n  }, [do_action, predictedAction]);\n\n  let mapRef = useRef();\n\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <div>webturn v:0.0.8</div>\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          padding: \"10px\",\n          boxSizing: \"border-box\",\n        }}\n      >\n        {state.nextChars.map((char, index) =>\n          swi([char === \"/\", () => <div>|</div>], () => (\n            <div\n              key={char.id + index}\n              onMouseEnter={() => setCharHover(char.id)}\n              onMouseLeave={() => setCharHover(null)}\n              style={{\n                background: charHover === char.id ? \"#ccc\" : \"#fff\",\n                padding: \"5px\",\n                margin: \"5px\",\n                color: \"black\",\n                userSelect: \"none\",\n                border: index === 0 ? \"4px solid #aef\" : \"2px solid #0000\",\n                borderRadius: \"5px\",\n              }}\n            >\n              <div>\n                <img style={{ width: \"30px\" }} src={char.avatar}></img>\n              </div>\n              {char.name}\n            </div>\n          ))\n        )}\n      </div>\n\n      <div style={{ display: \"flex\" }}>\n        {/* MAP */}\n        <div\n          style={{\n            position: \"relative\",\n            cursor: swi(\n              [!canAction, \"not-allowed\"],\n              [predictedAction.type === \"attack\", \"crosshair\"],\n              [predictedAction.possible === true, \"pointer\"],\n              \"not-allowed\"\n            ),\n          }}\n        >\n          {_.chunk(state.map.tiles, state.map.w).map((row, rowIndex) => (\n            <div key={rowIndex} style={{ display: \"flex\" }}>\n              {row.map((tile, colIndex) => (\n                <div\n                  key={colIndex}\n                  style={{\n                    width: \"50px\",\n                    height: \"50px\",\n                    position: \"relative\",\n                    transition: \"50ms\",\n                    background: swi(\n                      [tile.type === 1, \"#333\"],\n                      [\n                        tile.type === 0 &&\n                          tileHover?.index ===\n                            colIndex + state.map.w * rowIndex,\n                        \"#bbb\",\n                      ],\n                      \"#999\"\n                    ),\n                  }}\n                >\n                  {tile.effects.map((effect) => (\n                    <div\n                      style={{\n                        position: \"absolute\",\n                        top: \"50%\",\n                        left: \"50%\",\n                        transform: \"translate(-50%,-50%)\",\n                        width: \"30px\",\n                        height: \"30px\",\n                        background: \"#f609\",\n                      }}\n                    ></div>\n                  ))}\n                </div>\n              ))}\n            </div>\n          ))}\n          <div\n            onClick={() => tileClick(tileHover.x, tileHover.y)}\n            ref={mapRef}\n            onMouseMove={(e) => {\n              let bb = mapRef.current.getBoundingClientRect();\n              let x = Math.floor((e.clientX - bb.x) / TILE_WIDTH);\n              let y = Math.floor((e.clientY - bb.y) / TILE_WIDTH);\n              let index = x + state.map.w * y;\n              setTileHover({ x, y, index });\n            }}\n            style={{\n              position: \"absolute\",\n              top: \"0px\",\n              left: \"0px\",\n              width: \"100%\",\n              height: \"100%\",\n            }}\n          ></div>\n\n          {/* POWER RADIUS */}\n          <div\n            style={{\n              position: \"absolute\",\n              top: \"0px\",\n              left: \"0px\",\n              width: \"100%\",\n              height: \"100%\",\n              pointerEvents: \"none\",\n            }}\n          >\n            {tileHover &&\n              predictedAction &&\n              POWER[predictedAction.type] &&\n              POWER[predictedAction.type].radius !== undefined &&\n              radiusToUV(POWER[predictedAction.type].radius).map(({ u, v }) => (\n                <div\n                  key={u + \"/\" + v}\n                  style={{\n                    position: \"absolute\",\n                    left: TILE_WIDTH * (u + tileHover.x) + \"px\",\n                    top: TILE_WIDTH * (v + tileHover.y) + \"px\",\n                    width: \"50px\",\n                    height: \"50px\",\n                    background: \"#fff5\",\n                  }}\n                ></div>\n              ))}\n          </div>\n\n          {state.chars.map((char) => (\n            <DisplayChar\n              key={\"cahr\" + char.id}\n              charHover={charHover}\n              onMouseEnter={() => setCharHover(char.id)}\n              onMouseLeave={() => setCharHover(null)}\n              onClick={() => charClick(char.id)}\n              currentChar={currentChar}\n              char={char}\n            ></DisplayChar>\n          ))}\n        </div>\n        {/* DETAIL */}\n        <Detail\n          tileHover={tileHover}\n          charHover={charHover}\n          state={state}\n        ></Detail>\n      </div>\n\n      <div\n        style={{\n          opacity: canAction ? \"1\" : \"0.7\",\n          cursor: canAction ? \"auto\" : \"not-allowed\",\n        }}\n      >\n        <div style={{ display: \"flex\", alignItems: \"center\", margin: \"10px\" }}>\n          {swi(\n            [predictedAction.type === \"none\", () => <div>none</div>],\n            [\n              predictedAction.type !== \"none\",\n              () => (\n                <div\n                  style={{ color: predictedAction.possible ? \"black\" : \"red\" }}\n                >\n                  {predictedAction.type} (cost {predictedAction.cost})\n                </div>\n              ),\n            ]\n          )}\n        </div>\n\n        <div style={{ display: \"flex\", alignItems: \"center\", margin: \"10px\" }}>\n          {[...Array(MAX_PA).keys()].map((i) => (\n            <div\n              key={currentChar.id + \"/\" + i}\n              style={{\n                width: \"30px\",\n                height: \"30px\",\n                borderRadius: \"50%\",\n                margin: \"5px\",\n                border: \"3px solid black\",\n                transition: \"500ms\",\n                background: swi(\n                  [i + 1 <= currentChar.pa - predictedAction.cost, \"#bbb\"],\n                  [i + 1 <= currentChar.pa, \"#5ee\"],\n                  \"#000\"\n                ),\n              }}\n            ></div>\n          ))}\n        </div>\n\n        <div style={{ margin: \"10px\", background: \"#eee\" }}>\n          <div\n            style={{\n              fontSize: \"1.2em\",\n              background: \"#345\",\n              color: \"white\",\n              padding: \"5px\",\n            }}\n          >\n            Power\n          </div>\n          <div style={{ display: \"flex\" }}>\n            <Power\n              onClick={() => setSelectedPower(null)}\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                background: \"#333\",\n                color: \"white\",\n                border: \"3px solid #000\",\n              }}\n            >\n              Move\n            </Power>\n            <Power\n              onClick={pass}\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                background: \"#333\",\n                color: \"white\",\n                border: \"3px solid #000\",\n              }}\n            >\n              Pass\n            </Power>\n            <Power\n              onClick={() =>\n                setSelectedPower((old) => (old === \"attack\" ? null : \"attack\"))\n              }\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                background: selectedPower === \"attack\" ? \"#999\" : \"#333\",\n                color: \"white\",\n                border: \"3px solid #000\",\n              }}\n            >\n              Attack\n            </Power>\n\n            {[\"arrow\", \"fire\"].map((power) => (\n              <Power\n                key={power}\n                onClick={() => {\n                  if (!currentChar.cooldown[power]) {\n                    setSelectedPower((old) => (old === power ? null : power));\n                  }\n                }}\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  background: swi(\n                    [currentChar.cooldown[power], \"#a00\"],\n                    selectedPower === power ? \"#999\" : \"#333\"\n                  ),\n                  color: \"white\",\n                  border: \"3px solid #000\",\n                }}\n              >\n                {power}\n                {currentChar.cooldown[power] &&\n                  \" (\" + currentChar.cooldown[power] + \")\"}\n              </Power>\n            ))}\n          </div>\n        </div>\n\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            margin: \"10px\",\n          }}\n        >\n          <div style={{ marginRight: \"20px\", minWidth: \"450px\" }}>\n            <div\n              style={{\n                fontSize: \"1.2em\",\n                background: \"#345\",\n                color: \"white\",\n                padding: \"5px\",\n              }}\n            >\n              History\n            </div>\n            <div\n              ref={actionsRef}\n              style={{\n                background: \"#eee\",\n                height: \"200px\",\n                overflowY: \"scroll\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"flex-start\",\n                alignItems: \"flex-start\",\n              }}\n            >\n              {actionsEffects.map((action, index) => (\n                <div key={index} style={{}}>\n                  <ActionEffectFrag\n                    action={action}\n                    state={state}\n                  ></ActionEffectFrag>\n                </div>\n              ))}\n            </div>\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"flex-start\",\n              alignItems: \"flex-start\",\n              flex: \"1 100 auto\",\n              background: \"#eee\",\n              minWidth: \"450px\",\n            }}\n          >\n            <div\n              style={{\n                fontSize: \"1.2em\",\n                background: \"#345\",\n                color: \"white\",\n                padding: \"5px\",\n                width: \"100%\",\n                boxSizing: \"border-box\",\n              }}\n            >\n              Possible actions\n            </div>\n            {possibleActions.map((action, index) => (\n              <div key={index}>{JSON.stringify(action)}</div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction HoriChar({ name, avatar }) {\n  return (\n    <div\n      style={{\n        fontWeight: \"500\",\n        width: \"100px\",\n        flex: \"none\",\n        display: \"flex\",\n        alignItems: \"center\",\n        background: \"#ccc\",\n        color: \"black\",\n        height: \"30px\",\n      }}\n    >\n      <img style={{ width: \"30px\", marginRight: \"5px\" }} src={avatar}></img>\n      <div>{name}</div>\n    </div>\n  );\n}\n\nfunction CharEffect({ effect, state }) {\n  let char = useMemo(() => {\n    return state.chars.find((e) => e.id === effect.charId);\n  }, [state]);\n\n  let simpleE = useMemo(() => {\n    let a = _.cloneDeep(effect);\n    delete a.computedAt;\n    delete a.charId;\n    delete a.type;\n    return a;\n  }, [effect]);\n\n  return (\n    <div\n      style={{\n        margin: \"2px\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"flex-start\",\n      }}\n    >\n      <div style={{ marginRight: \"40px\" }}></div>\n      {char && <HoriChar name={char.name} avatar={char.avatar}></HoriChar>}\n      <div\n        style={{\n          fontWeight: \"500\",\n          width: \"150px\",\n          padding: \"4px\",\n          height: \"30px\",\n          boxSizing: \"border-box\",\n          flex: \"none\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"flex-start\",\n          background: \"#666\",\n          color: \"white\",\n        }}\n      >\n        {effect.type}\n      </div>\n      <div style={{ fontSize: \"0.8em\", fontWeight: \"bold\", padding: \"2px\" }}>\n        {JSON.stringify(simpleE)}\n      </div>\n    </div>\n  );\n}\n\nfunction ActionEffectFrag({ action, state }) {\n  if (!action.isAction)\n    return <CharEffect effect={action} state={state}></CharEffect>;\n\n  return (\n    <div\n      style={{\n        margin: \"2px\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"flex-start\",\n      }}\n    >\n      <HoriChar name={action.char.name} avatar={action.char.avatar}></HoriChar>\n      <div\n        style={{\n          fontWeight: \"500\",\n          width: \"150px\",\n          padding: \"4px\",\n          height: \"30px\",\n          boxSizing: \"border-box\",\n          flex: \"none\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"flex-start\",\n          background: \"#666\",\n          color: \"white\",\n        }}\n      >\n        {action.type}\n      </div>\n\n      {swi(\n        [\n          action.type === \"move\",\n          () => (\n            <div\n              style={{ fontSize: \"0.8em\", fontWeight: \"bold\", padding: \"2px\" }}\n            >\n              x:{action.x} / y:{action.y}\n            </div>\n          ),\n        ],\n        [\n          action.type === \"attack\" || action.type === \"arrow\",\n          () => {\n            let t = state.chars.find((e) => e.id === action.target);\n            return (\n              <>\n                <HoriChar name={t.name} avatar={t.avatar}></HoriChar>{\" \"}\n                <div\n                  style={{\n                    fontSize: \"0.8em\",\n                    fontWeight: \"bold\",\n                    padding: \"2px\",\n                  }}\n                ></div>\n              </>\n            );\n          },\n        ],\n        [action.type === \"pass\", () => <div></div>]\n      )}\n    </div>\n  );\n}\n\nfunction DisplayChar({\n  char,\n  charHover,\n  currentChar,\n  onMouseEnter,\n  onMouseLeave,\n  onClick,\n}) {\n  let { id, hp, avatar } = char;\n\n  let charRef = useRef(char);\n  useEffect(() => {\n    charRef.current = char;\n  }, [char]);\n\n  let [position, setPosition] = useState({ x: char.x, y: char.y });\n\n  let [endTurnAnim, setEndTurnAnim] = useState(null);\n\n  useAnimationFrame(() => {\n    let current = charRef.current;\n    if (!current.anim) {\n      setPosition(current);\n    } else {\n      let elapsed = performance.now() - current.anim.startTime;\n      let max = 500;\n      let lambda = Math.min(1, Math.max(0, elapsed / max));\n\n      if (current.anim.type === EFFECT_TYPES.ANIM_MOVE) {\n        setPosition({\n          x: current.anim.from.x * (1 - lambda) + current.anim.to.x * lambda,\n          y: current.anim.from.y * (1 - lambda) + current.anim.to.y * lambda,\n        });\n      } else if (current.anim.type === EFFECT_TYPES.ANIM_ATTACK) {\n        let dd = smoothstep(0, 0.5, lambda) * smoothstep(1.0, 0.5, lambda);\n        setPosition({\n          x: current.x * (1 - dd) + (current.x + current.anim.d.x * 0.5) * dd,\n          y: current.y * (1 - dd) + (current.y + current.anim.d.y * 0.5) * dd,\n        });\n      } else if (current.anim.type === EFFECT_TYPES.ANIM_ARROW) {\n        let dd = smoothstep(0, 0.5, lambda) * smoothstep(1.0, 0.5, lambda);\n        setPosition({\n          x:\n            current.x * (1 - dd) +\n            (current.x + (0.5 * current.anim.d.x) / current.anim.d.l) * dd,\n          y:\n            current.y * (1 - dd) +\n            (current.y + (0.5 * current.anim.d.y) / current.anim.d.l) * dd,\n        });\n      } else if (current.anim.type === EFFECT_TYPES.ANIM_END_TURN) {\n        let dd = -(30 + smoothstep(0, 1, lambda) * 10);\n        setEndTurnAnim({\n          y: dd + \"px\",\n          opacity: smoothstep(0, 0.4, lambda) * smoothstep(1, 0.7, lambda),\n        });\n        if (lambda === 1) {\n          setEndTurnAnim(null);\n        }\n      }\n      if (lambda === 1) {\n        current.anim = null;\n      }\n    }\n  });\n\n  return (\n    <div\n      key={id}\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={onMouseLeave}\n      onClick={onClick}\n      style={{\n        position: \"absolute\",\n        left: (0.15 + position.x) * TILE_WIDTH + \"px\",\n        top: (0.15 + position.y) * TILE_WIDTH + \"px\",\n        color: \"#eee\",\n        fontWeight: 500,\n        background: charHover === id ? \"#fff\" : \"#0000\",\n        width: TILE_WIDTH * 0.7 + \"px\",\n        height: TILE_WIDTH * 0.7 + \"px\",\n\n        boxShadow:\n          currentChar.id === id\n            ? \"0px 0px 20px blue,0px 0px 5px #0009\"\n            : \"0px 0px 20px #0009\",\n        borderRadius: \"50%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        userSelect: \"none\",\n        // transition: \"300ms\",\n      }}\n    >\n      {/* endTurnAnim */}\n      {endTurnAnim && (\n        <div\n          key=\"endTurn\"\n          style={{\n            position: \"absolute\",\n            left: \"50%\",\n            top: \"0px\",\n            transform: \"translate(-50%,\" + endTurnAnim.y + \")\",\n            zIndex: \"500\",\n          }}\n        >\n          <div\n            style={{\n              background: \"#fff9\",\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              width: \"40px\",\n              height: \"40px\",\n              borderRadius: \"50%\",\n              opacity: endTurnAnim.opacity,\n            }}\n          >\n            <img\n              style={{ width: \"20px\" }}\n              src={process.env.PUBLIC_URL + \"/img/time.svg\"}\n            ></img>\n          </div>\n        </div>\n      )}{\" \"}\n      <img style={{ width: \"30px\" }} src={avatar}></img>\n      <div\n        style={{\n          background: \"#111\",\n          padding: \"2px 1px 2px 2px\",\n          display: \"flex\",\n        }}\n      >\n        {[...Array(DEFAULT_HP).keys()].map((i) => (\n          <div\n            key={i}\n            style={{\n              width: \"4px\",\n              height: \"4px\",\n              borderRadius: \"1px\",\n              margin: \"0px 1px 0px 0px\",\n              transition: \"300ms\",\n              background: swi(\n                [hp === 0, \"#000\"],\n                [i + 1 <= hp, \"green\"],\n                \"#e00\"\n              ),\n            }}\n          ></div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nfunction DLine({ category, value }) {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        border: \"1px solid white\",\n        margin: \"5px\",\n        padding: \"5px\",\n        alignItems: \"center\",\n        justifyContent: \"flex-start\",\n      }}\n    >\n      <div style={{ width: \"100px\", flex: \"none\", textAlign: \"left\" }}>\n        {category}\n      </div>\n      <div style={{ width: \"100px\", textAlign: \"left\" }}>{value}</div>\n    </div>\n  );\n}\n\nfunction Detail({ tileHover, charHover, state }) {\n  let char = useMemo(() => {\n    return state.chars.find((e) => e.id === charHover);\n  }, [state, charHover]);\n\n  let tile = useMemo(() => {\n    if (!tileHover) return;\n    return state.map.tiles[tileHover.index];\n  }, [tileHover, state]);\n\n  return (\n    <div\n      style={{\n        marginLeft: \"50px\",\n        width: \"300px\",\n        height: \"500px\",\n        background: \"#345\",\n        color: \"#fff\",\n      }}\n    >\n      {swi(\n        [\n          char,\n          () => (\n            <div>\n              <div style={{ margin: \"10px\" }}>\n                <img src={char.avatar} style={{ width: \"30px\" }}></img>\n              </div>\n              <div style={{ margin: \"10px\" }}>{char.name}</div>\n              <DLine category={\"team\"} value={char.team}></DLine>\n              <DLine category={\"user\"} value={char.user}></DLine>\n              <DLine category={\"hp\"} value={char.hp}></DLine>\n              <DLine category={\"pa\"} value={char.pa}></DLine>\n              {Object.keys(char.cooldown).length > 0 && (\n                <>\n                  <div>Cooldown</div>\n                  {Object.keys(char.cooldown).map((k) => (\n                    <DLine category={k} value={char.cooldown[k]}></DLine>\n                  ))}\n                </>\n              )}\n            </div>\n          ),\n        ],\n        [\n          tile,\n          () => (\n            <div>\n              {\" \"}\n              <DLine category={\"type\"} value={tileName(tile)}></DLine>\n              {tile.effects.length > 0 && (\n                <>\n                  <div>Effects</div>\n                  {tile.effects.map((effect) => (\n                    <div>\n                      <DLine category={\"type\"} value={effect.type}></DLine>\n                      <DLine\n                        category={\"cooldown\"}\n                        value={effect.cooldown}\n                      ></DLine>\n                    </div>\n                  ))}\n                </>\n              )}\n            </div>\n          ),\n        ],\n        <div>Hover something</div>\n      )}\n    </div>\n  );\n}\n","import \"./App.css\";\n// eslint-disable-next-line\nimport MyWorker from \"comlink-loader!./StateCompute\";\n\nimport Draw from \"./Draw\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\n\nimport {\n  applyEffects,\n  enumeratePossibleActions,\n  evaluateAction,\n  exploreAndRate,\n  minimalStateCopy,\n  DEFAULT_HP,\n  nextChars,\n  bestAction,\n  generateBestIAAction,\n  DEFAULT_PA,\n} from \"./StateCompute\";\n\nvar _ = require(\"lodash\");\nconst worker = new MyWorker();\nlet TILES = `\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n  1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, \n  1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, \n  1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, \n  1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, \n  1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n  1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1,\n  1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1,\n  1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1,\n  1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1,\n  1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n  1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n  1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, \n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1\n`;\n\nlet MAP = {\n  w: 14,\n  h: 14,\n  tiles: TILES.replace(\" \", \"\")\n    .split(\",\")\n    .map((e) => {\n      return {\n        type: parseInt(e),\n        effects: [],\n      };\n    }),\n};\n\nlet alreadyReducing = null;\nasync function reducer(old, action) {\n  console.log(\"dispatch start\", action.type);\n  if (action.type === \"tick\") {\n    if (old.currentChar.user === \"me\") {\n      return old;\n    } else {\n      //\n      action = await worker.generateBestIAAction(old);\n    }\n  }\n  let state = _.cloneDeep(old);\n\n  let { cost, possible, effects } = evaluateAction(\n    state,\n    action,\n    old.currentChar.user === \"me\"\n  );\n  if (possible) {\n    state.actions.push({\n      computedAt: performance.now(),\n      ...action,\n      char: state.currentChar,\n      cost,\n    });\n\n    applyEffects(state, effects, true);\n  }\n  console.log(\"dispatch end\");\n\n  return state;\n}\n\nfunction defaultState() {\n  let randId = () => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER);\n\n  let ids = [0, randId(), randId(), randId(), randId(), randId()];\n\n  let s = {\n    lastEffectTime: performance.now(),\n\n    map: MAP,\n    chars: [\n      {\n        id: ids[0],\n        x: 1,\n        y: 1,\n        name: \"foo\",\n        lastPlayedTurn: -1,\n        user: \"me\",\n        team: \"1\",\n        pa: DEFAULT_PA,\n        avatar: \"https://avatars.dicebear.com/api/bottts/\" + ids[0] + \".svg\",\n        hp: DEFAULT_HP,\n        cooldown: {},\n      },\n      {\n        id: ids[1],\n        x: 5,\n        y: 2,\n        name: \"bar\",\n        lastPlayedTurn: -1,\n        user: \"ia2\",\n        team: \"2\",\n        pa: DEFAULT_PA,\n        avatar: \"https://avatars.dicebear.com/api/bottts/\" + ids[1] + \".svg\",\n        hp: DEFAULT_HP,\n        cooldown: {},\n      },\n      {\n        id: ids[2],\n        x: 5,\n        y: 5,\n        name: \"baz\",\n        lastPlayedTurn: -1,\n        user: \"ia3\",\n        team: \"3\",\n        pa: DEFAULT_PA,\n        avatar: \"https://avatars.dicebear.com/api/bottts/\" + ids[2] + \".svg\",\n        hp: DEFAULT_HP,\n        cooldown: {},\n      },\n      {\n        id: ids[3],\n        x: 11,\n        y: 11,\n        name: \"zoo\",\n        lastPlayedTurn: -1,\n        user: \"ia4\",\n        team: \"4\",\n        pa: DEFAULT_PA,\n        avatar: \"https://avatars.dicebear.com/api/bottts/\" + ids[3] + \".svg\",\n        hp: DEFAULT_HP,\n        cooldown: {},\n      },\n      {\n        id: ids[4],\n        x: 2,\n        y: 11,\n        name: \"moo\",\n        lastPlayedTurn: -1,\n        user: \"ia5\",\n        team: \"5\",\n        pa: DEFAULT_PA,\n        avatar: \"https://avatars.dicebear.com/api/bottts/\" + ids[4] + \".svg\",\n        hp: DEFAULT_HP,\n        cooldown: {},\n      },\n    ],\n    actions: [],\n    effects: [],\n  };\n\n  s.nextChars = nextChars(s);\n  s.currentChar = s.nextChars[0];\n\n  return s;\n}\n\nfunction App() {\n  let user = \"me\";\n\n  let stateRef = useRef(defaultState());\n\n  let dispatch = useCallback(async (action) => {\n    if (alreadyReducing) {\n      console.error(\n        \"alreadyReducing !!!\",\n        alreadyReducing,\n        \"while starting\",\n        action\n      );\n      if (action.type === \"tick\") return;\n    }\n    alreadyReducing = action;\n    stateRef.current = await reducer(stateRef.current, action);\n    alreadyReducing = null;\n    setState(stateRef.current);\n  }, []);\n\n  let [state, setState] = useState(stateRef.current);\n\n  useEffect(() => {\n    setTimeout(() => {\n      dispatch({ type: \"tick\" });\n    }, 500);\n  }, [state, dispatch]);\n\n  return (\n    <div className=\"App\">\n      <Draw user={user} state={state} do_action={dispatch}></Draw>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}